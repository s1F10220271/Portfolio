{"ast":null,"code":"var _jsxFileName = \"/home/iniad/F/chatgpt-clone/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TaskInput from \"./components/TaskInput\";\nimport TaskList from \"./components/TaskList\";\nimport Tabs from \"./components/Tabs\";\nimport { categorizeTask } from \"./utils/genreCategorizer\";\nimport Calendar from \"react-calendar\";\nimport \"./App.css\";\nimport \"react-calendar/dist/Calendar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n  const [genres, setGenres] = useState([\"ÊéàÊ•≠\", \"Ë™≤È°å\", \"„ÉÜ„Çπ„ÉàÂãâÂº∑\", \"„Ç¢„É´„Éê„Ç§„Éà\", \"Ë≤∑„ÅÑÁâ©\", \"Âèã‰∫∫\", \"Â∞±Ê¥ª\", \"Ë∂£Âë≥\"]);\n  const [selectedGenre, setSelectedGenre] = useState(\"all\");\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const addTask = async (taskText, deadline) => {\n    const dynamicGenres = genres.join(\"„ÄÅ\");\n    const genre = await categorizeTask(taskText, dynamicGenres);\n    if (!genres.includes(genre)) {\n      setGenres([...genres, genre]);\n    }\n    const newTask = {\n      id: Date.now(),\n      text: taskText,\n      genre: genre || \"„Åù„ÅÆ‰ªñ\",\n      deadline,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n  };\n  const toggleTaskCompletion = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n    document.body.className = isDarkMode ? \"light-mode\" : \"dark-mode\";\n  };\n  const filteredTasks = tasks.filter(task => {\n    if (filter === \"completed\") return task.completed;\n    if (filter === \"incomplete\") return !task.completed;\n    if (selectedGenre !== \"all\") return task.genre === selectedGenre;\n    return true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app ${isDarkMode ? \"dark-mode\" : \"light-mode\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-outside\",\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: date => setSelectedDate(date),\n        value: selectedDate,\n        tileContent: ({\n          date\n        }) => {\n          const hasTask = tasks.some(task => task.deadline === date.toISOString().split(\"T\")[0]);\n          return hasTask ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 30\n          }, this) : null;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Ultimate TODO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"theme-toggle\",\n          onClick: toggleTheme,\n          children: isDarkMode ? \"‚òÄÔ∏è\" : \"üåô\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskInput, {\n        addTask: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        setFilter: setFilter,\n        setSelectedGenre: setSelectedGenre,\n        genres: genres\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u5168\\u3066\\u306E\\u30BF\\u30B9\\u30AF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: filteredTasks,\n        toggleTaskCompletion: toggleTaskCompletion,\n        deleteTask: deleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Z7uAg+x/MmHcKQWo0fBRvL1Er74=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TaskInput","TaskList","Tabs","categorizeTask","Calendar","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","filter","setFilter","genres","setGenres","selectedGenre","setSelectedGenre","isDarkMode","setIsDarkMode","selectedDate","setSelectedDate","addTask","taskText","deadline","dynamicGenres","join","genre","includes","newTask","id","Date","now","text","completed","toggleTaskCompletion","map","task","deleteTask","toggleTheme","document","body","className","filteredTasks","children","onChange","date","value","tileContent","hasTask","some","toISOString","split","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/iniad/F/chatgpt-clone/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport TaskInput from \"./components/TaskInput\";\nimport TaskList from \"./components/TaskList\";\nimport Tabs from \"./components/Tabs\";\nimport { categorizeTask } from \"./utils/genreCategorizer\";\nimport Calendar from \"react-calendar\";\nimport \"./App.css\";\nimport \"react-calendar/dist/Calendar.css\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n  const [genres, setGenres] = useState([\n    \"ÊéàÊ•≠\",\n    \"Ë™≤È°å\",\n    \"„ÉÜ„Çπ„ÉàÂãâÂº∑\",\n    \"„Ç¢„É´„Éê„Ç§„Éà\",\n    \"Ë≤∑„ÅÑÁâ©\",\n    \"Âèã‰∫∫\",\n    \"Â∞±Ê¥ª\",\n    \"Ë∂£Âë≥\",\n  ]);\n  const [selectedGenre, setSelectedGenre] = useState(\"all\");\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  const addTask = async (taskText, deadline) => {\n    const dynamicGenres = genres.join(\"„ÄÅ\");\n    const genre = await categorizeTask(taskText, dynamicGenres);\n\n    if (!genres.includes(genre)) {\n      setGenres([...genres, genre]);\n    }\n\n    const newTask = {\n      id: Date.now(),\n      text: taskText,\n      genre: genre || \"„Åù„ÅÆ‰ªñ\",\n      deadline,\n      completed: false,\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  const toggleTaskCompletion = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, completed: !task.completed } : task\n      )\n    );\n  };\n\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n    document.body.className = isDarkMode ? \"light-mode\" : \"dark-mode\";\n  };\n\n  const filteredTasks = tasks.filter((task) => {\n    if (filter === \"completed\") return task.completed;\n    if (filter === \"incomplete\") return !task.completed;\n    if (selectedGenre !== \"all\") return task.genre === selectedGenre;\n    return true;\n  });\n\n  return (\n    <div className={`app ${isDarkMode ? \"dark-mode\" : \"light-mode\"}`}>\n      {/* „Ç´„É¨„É≥„ÉÄ„Éº„ÇíÊû†Â§ñ„Å´ÈÖçÁΩÆ */}\n      <div className=\"calendar-outside\">\n        <Calendar\n          onChange={(date) => setSelectedDate(date)}\n          value={selectedDate}\n          tileContent={({ date }) => {\n            const hasTask = tasks.some(\n              (task) => task.deadline === date.toISOString().split(\"T\")[0]\n            );\n            return hasTask ? <div className=\"calendar-dot\"></div> : null;\n          }}\n        />\n      </div>\n\n      {/* Êû†ÂÜÖ„Å´Âèé„ÇÅ„ÅüUI */}\n      <div className=\"app-container\">\n        <div className=\"header\">\n          <h1>Ultimate TODO</h1>\n          <button className=\"theme-toggle\" onClick={toggleTheme}>\n            {isDarkMode ? \"‚òÄÔ∏è\" : \"üåô\"}\n          </button>\n        </div>\n\n        <TaskInput addTask={addTask} />\n        <Tabs setFilter={setFilter} setSelectedGenre={setSelectedGenre} genres={genres} />\n        <h2>ÂÖ®„Å¶„ÅÆ„Çø„Çπ„ÇØ</h2>\n        <TaskList\n          tasks={filteredTasks}\n          toggleTaskCompletion={toggleTaskCompletion}\n          deleteTask={deleteTask}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}