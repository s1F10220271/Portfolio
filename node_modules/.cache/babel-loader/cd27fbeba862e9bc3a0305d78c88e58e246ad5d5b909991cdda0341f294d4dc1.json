{"ast":null,"code":"var _jsxFileName = \"/home/iniad/F/chatgpt-clone/src/components/TaskInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskInput({\n  addTask,\n  genres,\n  addGenre\n}) {\n  _s();\n  const [task, setTask] = useState(\"\");\n  const [deadline, setDeadline] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [newGenre, setNewGenre] = useState(\"\");\n  const handleAddTask = () => {\n    if (task) {\n      addTask(task, deadline, genre);\n      setTask(\"\");\n      setDeadline(\"\");\n      setGenre(\"\");\n    }\n  };\n  const handleAddGenre = () => {\n    if (newGenre) {\n      addGenre(newGenre);\n      setNewGenre(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u65B0\\u3057\\u3044\\u30BF\\u30B9\\u30AF\\u3092\\u5165\\u529B...\",\n      value: task,\n      onChange: e => setTask(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: deadline,\n      onChange: e => setDeadline(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: genre,\n      onChange: e => setGenre(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"\\u30B8\\u30E3\\u30F3\\u30EB\\u3092\\u9078\\u629E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), genres.map((g, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: g,\n        children: g\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"\\u8FFD\\u52A0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-genre\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u65B0\\u3057\\u3044\\u30B8\\u30E3\\u30F3\\u30EB\\u3092\\u8FFD\\u52A0\",\n        value: newGenre,\n        onChange: e => setNewGenre(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddGenre,\n        children: \"\\u30B8\\u30E3\\u30F3\\u30EB\\u8FFD\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskInput, \"lfILzMSGdnc905WBzZVQV5yKLqo=\");\n_c = TaskInput;\nexport default TaskInput;\nvar _c;\n$RefreshReg$(_c, \"TaskInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskInput","addTask","genres","addGenre","_s","task","setTask","deadline","setDeadline","genre","setGenre","newGenre","setNewGenre","handleAddTask","handleAddGenre","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","g","index","onClick","_c","$RefreshReg$"],"sources":["/home/iniad/F/chatgpt-clone/src/components/TaskInput.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction TaskInput({ addTask, genres, addGenre }) {\n  const [task, setTask] = useState(\"\");\n  const [deadline, setDeadline] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [newGenre, setNewGenre] = useState(\"\");\n\n  const handleAddTask = () => {\n    if (task) {\n      addTask(task, deadline, genre);\n      setTask(\"\");\n      setDeadline(\"\");\n      setGenre(\"\");\n    }\n  };\n\n  const handleAddGenre = () => {\n    if (newGenre) {\n      addGenre(newGenre);\n      setNewGenre(\"\");\n    }\n  };\n\n  return (\n    <div className=\"task-input\">\n      <input\n        type=\"text\"\n        placeholder=\"新しいタスクを入力...\"\n        value={task}\n        onChange={(e) => setTask(e.target.value)}\n      />\n      <input\n        type=\"date\"\n        value={deadline}\n        onChange={(e) => setDeadline(e.target.value)}\n      />\n      <select value={genre} onChange={(e) => setGenre(e.target.value)}>\n        <option value=\"\">ジャンルを選択</option>\n        {genres.map((g, index) => (\n          <option key={index} value={g}>{g}</option>\n        ))}\n      </select>\n      <button onClick={handleAddTask}>追加</button>\n\n      <div className=\"add-genre\">\n        <input\n          type=\"text\"\n          placeholder=\"新しいジャンルを追加\"\n          value={newGenre}\n          onChange={(e) => setNewGenre(e.target.value)}\n        />\n        <button onClick={handleAddGenre}>ジャンル追加</button>\n      </div>\n    </div>\n  );\n}\n\nexport default TaskInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}