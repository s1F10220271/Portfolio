{"ast":null,"code":"var _jsxFileName = \"/home/iniad/F/chatgpt-clone/src/components/FormSection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormSection = ({\n  onSendQuestion\n}) => {\n  _s();\n  const [question, setQuestion] = useState(''); // 入力された質問を管理\n\n  // フォーム送信時の処理\n  const handleSubmit = e => {\n    e.preventDefault(); // ページリロードを防止\n    if (question.trim()) {\n      onSendQuestion(question); // 親コンポーネントに質問を送信\n      setQuestion(''); // 入力欄をクリア\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"question\",\n      children: \"Ask a question:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"question\",\n      value: question,\n      onChange: e => setQuestion(e.target.value) // 入力値を更新\n      ,\n      placeholder: \"Type your question here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(FormSection, \"X6N7EgaEMrwiXWJKemnQbxZKjLQ=\");\n_c = FormSection;\nexport default FormSection;\nvar _c;\n$RefreshReg$(_c, \"FormSection\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FormSection","onSendQuestion","_s","question","setQuestion","handleSubmit","e","preventDefault","trim","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/home/iniad/F/chatgpt-clone/src/components/FormSection.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst FormSection = ({ onSendQuestion }) => {\n  const [question, setQuestion] = useState(''); // 入力された質問を管理\n\n  // フォーム送信時の処理\n  const handleSubmit = (e) => {\n    e.preventDefault(); // ページリロードを防止\n    if (question.trim()) {\n      onSendQuestion(question); // 親コンポーネントに質問を送信\n      setQuestion(''); // 入力欄をクリア\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"question\">Ask a question:</label>\n      <input\n        type=\"text\"\n        id=\"question\"\n        value={question}\n        onChange={(e) => setQuestion(e.target.value)} // 入力値を更新\n        placeholder=\"Type your question here...\"\n      />\n      <button type=\"submit\">Send</button>\n    </form>\n  );\n};\n\nexport default FormSection;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9C;EACA,MAAMQ,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;IACpB,IAAIJ,QAAQ,CAACK,IAAI,CAAC,CAAC,EAAE;MACnBP,cAAc,CAACE,QAAQ,CAAC,CAAC,CAAC;MAC1BC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;IACnB;EACF,CAAC;EAED,oBACEL,OAAA;IAAMU,QAAQ,EAAEJ,YAAa;IAAAK,QAAA,gBAC3BX,OAAA;MAAOY,OAAO,EAAC,UAAU;MAAAD,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACjDhB,OAAA;MACEiB,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,UAAU;MACbC,KAAK,EAAEf,QAAS;MAChBgB,QAAQ,EAAGb,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACc,MAAM,CAACF,KAAK,CAAE,CAAC;MAAA;MAC9CG,WAAW,EAAC;IAA4B;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eACFhB,OAAA;MAAQiB,IAAI,EAAC,QAAQ;MAAAN,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEX,CAAC;AAACb,EAAA,CAzBIF,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AA2BjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}