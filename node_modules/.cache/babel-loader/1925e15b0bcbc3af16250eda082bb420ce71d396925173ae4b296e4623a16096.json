{"ast":null,"code":"var _jsxFileName = \"/home/iniad/F/chatgpt-clone/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TaskInput from \"./components/TaskInput\";\nimport TaskList from \"./components/TaskList\";\nimport Tabs from \"./components/Tabs\";\nimport { categorizeTask } from \"./utils/genreCategorizer\";\nimport Calendar from \"react-calendar\";\nimport \"./App.css\";\nimport \"react-calendar/dist/Calendar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n  const [genres, setGenres] = useState([\"課題\", \"勉強\", \"バイト\", \"就活\"]);\n  const [selectedGenre, setSelectedGenre] = useState(\"all\");\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  // 新しいジャンルを追加\n  const addGenre = newGenre => {\n    if (!genres.includes(newGenre)) {\n      setGenres([...genres, newGenre]);\n    }\n  };\n\n  // 新しいタスクを追加\n  const addTask = async (taskText, deadline) => {\n    const dynamicGenres = genres.join(\"、\");\n    const genre = await categorizeTask(taskText, dynamicGenres);\n    if (!genres.includes(genre)) {\n      setGenres([...genres, genre]);\n    }\n    const newTask = {\n      id: Date.now(),\n      text: taskText,\n      genre: genre || \"その他\",\n      deadline,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  // タスクの完了・未完了を切り替える\n  const toggleTaskCompletion = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n\n  // タスクを削除\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  // テーマの切り替え\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n    document.body.className = isDarkMode ? \"light-mode\" : \"dark-mode\";\n  };\n\n  // タスクのフィルタリング\n  const filteredTasks = tasks.filter(task => {\n    if (filter === \"completed\") return task.completed;\n    if (filter === \"incomplete\") return !task.completed;\n    if (selectedGenre !== \"all\") return task.genre === selectedGenre;\n    if (selectedDate) return task.deadline === selectedDate.toISOString().split(\"T\")[0];\n    return true;\n  });\n\n  // 「すべて」タブを押した時にカレンダー選択を解除\n  const handleFilterChange = newFilter => {\n    setFilter(newFilter);\n    if (newFilter === \"all\") {\n      setSelectedDate(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app ${isDarkMode ? \"dark-mode\" : \"light-mode\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: date => setSelectedDate(date),\n        value: selectedDate,\n        tileContent: ({\n          date\n        }) => {\n          const formattedDate = date.toISOString().split(\"T\")[0];\n          const hasTask = tasks.some(task => task.deadline === formattedDate);\n          return hasTask ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 30\n          }, this) : null;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Ultimate TODO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"theme-toggle\",\n          onClick: toggleTheme,\n          children: isDarkMode ? \"☀️\" : \"🌙\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskInput, {\n        addTask: addTask,\n        addGenre: addGenre,\n        genres: genres\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        setFilter: handleFilterChange,\n        setSelectedGenre: setSelectedGenre,\n        genres: genres\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedDate ? `${selectedDate.toISOString().split(\"T\")[0]} のタスク` : \"全てのタスク\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: filteredTasks,\n        toggleTaskCompletion: toggleTaskCompletion,\n        deleteTask: deleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"anxxLIxX55ZwzUQNg4XQdu2f7jk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TaskInput","TaskList","Tabs","categorizeTask","Calendar","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","filter","setFilter","genres","setGenres","selectedGenre","setSelectedGenre","isDarkMode","setIsDarkMode","selectedDate","setSelectedDate","addGenre","newGenre","includes","addTask","taskText","deadline","dynamicGenres","join","genre","newTask","id","Date","now","text","completed","toggleTaskCompletion","map","task","deleteTask","toggleTheme","document","body","className","filteredTasks","toISOString","split","handleFilterChange","newFilter","children","onChange","date","value","tileContent","formattedDate","hasTask","some","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/iniad/F/chatgpt-clone/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport TaskInput from \"./components/TaskInput\";\nimport TaskList from \"./components/TaskList\";\nimport Tabs from \"./components/Tabs\";\nimport { categorizeTask } from \"./utils/genreCategorizer\";\nimport Calendar from \"react-calendar\";\nimport \"./App.css\";\nimport \"react-calendar/dist/Calendar.css\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n  const [genres, setGenres] = useState([\n    \"課題\",\n    \"勉強\",\n    \"バイト\",\n    \"就活\",\n  ]);\n  const [selectedGenre, setSelectedGenre] = useState(\"all\");\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  // 新しいジャンルを追加\n  const addGenre = (newGenre) => {\n    if (!genres.includes(newGenre)) {\n      setGenres([...genres, newGenre]);\n    }\n  };\n\n  // 新しいタスクを追加\n  const addTask = async (taskText, deadline) => {\n    const dynamicGenres = genres.join(\"、\");\n    const genre = await categorizeTask(taskText, dynamicGenres);\n\n    if (!genres.includes(genre)) {\n      setGenres([...genres, genre]);\n    }\n\n    const newTask = {\n      id: Date.now(),\n      text: taskText,\n      genre: genre || \"その他\",\n      deadline,\n      completed: false,\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  // タスクの完了・未完了を切り替える\n  const toggleTaskCompletion = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, completed: !task.completed } : task\n      )\n    );\n  };\n\n  // タスクを削除\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // テーマの切り替え\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n    document.body.className = isDarkMode ? \"light-mode\" : \"dark-mode\";\n  };\n\n  // タスクのフィルタリング\n  const filteredTasks = tasks.filter((task) => {\n    if (filter === \"completed\") return task.completed;\n    if (filter === \"incomplete\") return !task.completed;\n    if (selectedGenre !== \"all\") return task.genre === selectedGenre;\n    if (selectedDate)\n      return task.deadline === selectedDate.toISOString().split(\"T\")[0];\n    return true;\n  });\n\n  // 「すべて」タブを押した時にカレンダー選択を解除\n  const handleFilterChange = (newFilter) => {\n    setFilter(newFilter);\n    if (newFilter === \"all\") {\n      setSelectedDate(null);\n    }\n  };\n\n  return (\n    <div className={`app ${isDarkMode ? \"dark-mode\" : \"light-mode\"}`}>\n      <div className=\"calendar-container\">\n        <Calendar\n          onChange={(date) => setSelectedDate(date)}\n          value={selectedDate}\n          tileContent={({ date }) => {\n            const formattedDate = date.toISOString().split(\"T\")[0];\n            const hasTask = tasks.some((task) => task.deadline === formattedDate);\n            return hasTask ? <div className=\"calendar-dot\"></div> : null;\n          }}\n        />\n      </div>\n\n      <div className=\"app-container\">\n        <div className=\"header\">\n          <h1>Ultimate TODO</h1>\n          <button className=\"theme-toggle\" onClick={toggleTheme}>\n            {isDarkMode ? \"☀️\" : \"🌙\"}\n          </button>\n        </div>\n\n        <TaskInput addTask={addTask} addGenre={addGenre} genres={genres} />\n        <Tabs\n          setFilter={handleFilterChange}\n          setSelectedGenre={setSelectedGenre}\n          genres={genres}\n        />\n        <h2>\n          {selectedDate\n            ? `${selectedDate.toISOString().split(\"T\")[0]} のタスク`\n            : \"全てのタスク\"}\n        </h2>\n        <TaskList\n          tasks={filteredTasks}\n          toggleTaskCompletion={toggleTaskCompletion}\n          deleteTask={deleteTask}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}