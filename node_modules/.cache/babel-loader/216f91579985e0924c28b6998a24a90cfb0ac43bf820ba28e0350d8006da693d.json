{"ast":null,"code":"var _jsxFileName = \"/home/iniad/F/chatgpt-clone/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport FormSection from './components/FormSection';\nimport AnswerSection from './components/AnswerSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [conversations, setConversations] = useState([]); // 会話のリストを管理\n\n  // 質問を送信して回答を受け取る\n  const handleSendQuestion = async question => {\n    // 仮のAPIリクエスト（実際にはOpenAI APIを使用）\n    const response = await fetch('https://api.example.com/chat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        question\n      })\n    });\n    const data = await response.json();\n\n    // 会話リストを更新\n    setConversations(prev => [...prev, {\n      question,\n      answer: data.answer\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ChatGPT Clone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormSection, {\n      onSendQuestion: handleSendQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnswerSection, {\n      conversations: conversations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"4iVW5ZptJKBMcssm78ngeK6nSyA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FormSection","AnswerSection","jsxDEV","_jsxDEV","App","_s","conversations","setConversations","handleSendQuestion","question","response","fetch","method","headers","body","JSON","stringify","data","json","prev","answer","children","fileName","_jsxFileName","lineNumber","columnNumber","onSendQuestion","_c","$RefreshReg$"],"sources":["/home/iniad/F/chatgpt-clone/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport FormSection from './components/FormSection';\nimport AnswerSection from './components/AnswerSection';\n\nconst App = () => {\n  const [conversations, setConversations] = useState([]); // 会話のリストを管理\n\n  // 質問を送信して回答を受け取る\n  const handleSendQuestion = async (question) => {\n    // 仮のAPIリクエスト（実際にはOpenAI APIを使用）\n    const response = await fetch('https://api.example.com/chat', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ question }),\n    });\n    const data = await response.json();\n\n    // 会話リストを更新\n    setConversations((prev) => [\n      ...prev,\n      { question, answer: data.answer },\n    ]);\n  };\n\n  return (\n    <div>\n      <h1>ChatGPT Clone</h1>\n      <FormSection onSendQuestion={handleSendQuestion} />\n      <AnswerSection conversations={conversations} />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExD;EACA,MAAMS,kBAAkB,GAAG,MAAOC,QAAQ,IAAK;IAC7C;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP;MAAS,CAAC;IACnC,CAAC,CAAC;IACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;;IAElC;IACAX,gBAAgB,CAAEY,IAAI,IAAK,CACzB,GAAGA,IAAI,EACP;MAAEV,QAAQ;MAAEW,MAAM,EAAEH,IAAI,CAACG;IAAO,CAAC,CAClC,CAAC;EACJ,CAAC;EAED,oBACEjB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBtB,OAAA,CAACH,WAAW;MAAC0B,cAAc,EAAElB;IAAmB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnDtB,OAAA,CAACF,aAAa;MAACK,aAAa,EAAEA;IAAc;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV,CAAC;AAACpB,EAAA,CA3BID,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA6BT,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}