{"ast":null,"code":"import { Configuration, OpenAIApi } from \"openai\";\nconst configuration = new Configuration({\n  apiKey: \"YOUR_OPENAI_API_KEY\"\n});\nconst openai = new OpenAIApi(configuration);\nexport const categorizeTask = async task => {\n  const prompt = `以下のタスクをジャンル分けしてください：\\n\\nタスク: ${task}\\n\\nジャンル候補: 勉強, 買い物, 遊び, その他\\n\\n答え:`;\n  const response = await openai.createCompletion({\n    model: \"text-davinci-003\",\n    prompt,\n    max_tokens: 10\n  });\n  return response.data.choices[0].text.trim();\n};","map":{"version":3,"names":["Configuration","OpenAIApi","configuration","apiKey","openai","categorizeTask","task","prompt","response","createCompletion","model","max_tokens","data","choices","text","trim"],"sources":["/home/iniad/F/chatgpt-clone/src/utils/genreCategorizer.js"],"sourcesContent":["import { Configuration, OpenAIApi } from \"openai\";\n\nconst configuration = new Configuration({\n  apiKey: \"YOUR_OPENAI_API_KEY\",\n});\nconst openai = new OpenAIApi(configuration);\n\nexport const categorizeTask = async (task) => {\n  const prompt = `以下のタスクをジャンル分けしてください：\\n\\nタスク: ${task}\\n\\nジャンル候補: 勉強, 買い物, 遊び, その他\\n\\n答え:`;\n\n  const response = await openai.createCompletion({\n    model: \"text-davinci-003\",\n    prompt,\n    max_tokens: 10,\n  });\n\n  return response.data.choices[0].text.trim();\n};"],"mappings":"AAAA,SAASA,aAAa,EAAEC,SAAS,QAAQ,QAAQ;AAEjD,MAAMC,aAAa,GAAG,IAAIF,aAAa,CAAC;EACtCG,MAAM,EAAE;AACV,CAAC,CAAC;AACF,MAAMC,MAAM,GAAG,IAAIH,SAAS,CAACC,aAAa,CAAC;AAE3C,OAAO,MAAMG,cAAc,GAAG,MAAOC,IAAI,IAAK;EAC5C,MAAMC,MAAM,GAAG,gCAAgCD,IAAI,qCAAqC;EAExF,MAAME,QAAQ,GAAG,MAAMJ,MAAM,CAACK,gBAAgB,CAAC;IAC7CC,KAAK,EAAE,kBAAkB;IACzBH,MAAM;IACNI,UAAU,EAAE;EACd,CAAC,CAAC;EAEF,OAAOH,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,CAAC,CAAC;AAC7C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}