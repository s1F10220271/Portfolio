{"ast":null,"code":"var _jsxFileName = \"/home/iniad/F/chatgpt-clone/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { chat } from './chat'; // chat.js のインポート\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // メッセージの状態管理用\n  const [message, setMessage] = useState('');\n  // 回答の状態管理用\n  const [answer, setAnswer] = useState('');\n\n  // メッセージの格納\n  const handleMessageChange = event => {\n    setMessage(event.target.value);\n  };\n\n  // 「質問」ボタンを押したときの処理\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // chat.js にメッセージを渡して API から回答を取得\n    const responseText = await chat(message);\n\n    // 回答の格納\n    setAnswer(responseText);\n  };\n\n  // チャットフォームの表示\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          cols: \"50\",\n          value: message,\n          onChange: handleMessageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\u8CEA\\u554F\\u3059\\u308B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), answer && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u56DE\\u7B54:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"hKnE96VjGLRWPMUGI3d6rRlstHY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","chat","jsxDEV","_jsxDEV","App","_s","message","setMessage","answer","setAnswer","handleMessageChange","event","target","value","handleSubmit","preventDefault","responseText","children","onSubmit","rows","cols","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/home/iniad/F/chatgpt-clone/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { chat } from './chat';  // chat.js のインポート\n \nconst App = () => {\n  // メッセージの状態管理用\n  const [ message, setMessage ] = useState( '' );\n  // 回答の状態管理用\n  const [ answer, setAnswer ] = useState( '' );\n \n  // メッセージの格納\n  const handleMessageChange = ( event )  => {\n    setMessage( event.target.value );\n  }\n \n  // 「質問」ボタンを押したときの処理\n  const handleSubmit = async ( event ) => {\n    event.preventDefault();\n \n    // chat.js にメッセージを渡して API から回答を取得\n    const responseText = await chat( message );\n \n    // 回答の格納\n    setAnswer( responseText );\n  }\n \n  // チャットフォームの表示\n  return (\n    <div>\n      <form onSubmit={ handleSubmit }>\n        <label>\n          <textarea\n            rows='5'\n            cols='50'\n            value={ message }\n            onChange={ handleMessageChange }\n          />\n        </label>\n        <div>\n          <button type=\"submit\">質問する</button>\n        </div>\n      </form>\n      { answer && (\n        <div>\n          <h2>回答:</h2>\n          <p>{ answer }</p>\n        </div>\n      ) }\n    </div>\n  );\n}\n \nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,QAAQ,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA,MAAM,CAAEC,OAAO,EAAEC,UAAU,CAAE,GAAGP,QAAQ,CAAE,EAAG,CAAC;EAC9C;EACA,MAAM,CAAEQ,MAAM,EAAEC,SAAS,CAAE,GAAGT,QAAQ,CAAE,EAAG,CAAC;;EAE5C;EACA,MAAMU,mBAAmB,GAAKC,KAAK,IAAO;IACxCJ,UAAU,CAAEI,KAAK,CAACC,MAAM,CAACC,KAAM,CAAC;EAClC,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG,MAAQH,KAAK,IAAM;IACtCA,KAAK,CAACI,cAAc,CAAC,CAAC;;IAEtB;IACA,MAAMC,YAAY,GAAG,MAAMf,IAAI,CAAEK,OAAQ,CAAC;;IAE1C;IACAG,SAAS,CAAEO,YAAa,CAAC;EAC3B,CAAC;;EAED;EACA,oBACEb,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAMe,QAAQ,EAAGJ,YAAc;MAAAG,QAAA,gBAC7Bd,OAAA;QAAAc,QAAA,eACEd,OAAA;UACEgB,IAAI,EAAC,GAAG;UACRC,IAAI,EAAC,IAAI;UACTP,KAAK,EAAGP,OAAS;UACjBe,QAAQ,EAAGX;QAAqB;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRtB,OAAA;QAAAc,QAAA,eACEd,OAAA;UAAQuB,IAAI,EAAC,QAAQ;UAAAT,QAAA,EAAC;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,EACLjB,MAAM,iBACNL,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAAc,QAAA,EAAI;MAAG;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACZtB,OAAA;QAAAc,QAAA,EAAKT;MAAM;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAApB,EAAA,CA9CKD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAgDT,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}